name: Deploy to Cloud Run

on:
    push:
        branches:
            - main

env:
    PROJECT_ID: classbook-react-project
    REGION: europe-west4
    REPO_NAME: ttsar-restapi-server-artifact-repo
    SERVICE_NAME: my-rest-api

jobs:
    deploy:
        runs-on: ubuntu-latest
        environment: Secrets environments

        steps:
            # Стъпка 1: Checkout на кода
            - name: Checkout
              uses: actions/checkout@v3

            # Стъпка 2: Аутентикация в Google Cloud
            - name: Authenticate to Google Cloud
              uses: google-github-actions/auth@v1
              with:
                  credentials_json: ${{ secrets.GCP_SA_KEY }} # Ще добавим това в следващата стъпка

            # Стъпка 3: Конфигуриране на gcloud CLI
            - name: Set up gcloud CLI
              uses: google-github-actions/setup-gcloud@v1

            # Стъпка 4: Конфигуриране на Docker за Artifact Registry
            - name: Configure Docker
              run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

            # Стъпка 5: Билд на Docker имиджа
            - name: Build Docker Image
              run: docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:latest .

            # Стъпка 6: Пуш на имиджа в Artifact Registry
            - name: Push Docker Image
              run: docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:latest

            # Стъпка 7: Деплой в Cloud Run
            - name: Deploy to Cloud Run
              run: |
                  gcloud run deploy ${{ env.SERVICE_NAME }} \
                    --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:latest \
                    --region ${{ env.REGION }} \
                    --platform managed \
                    --set-env-vars "JWT_SECRET=${{ secrets.JWT_SECRET }},CLOUD_DB_URL=${{ secrets.CLOUD_DB_URL }}",AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}",AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
